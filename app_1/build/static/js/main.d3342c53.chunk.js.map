{"version":3,"sources":["header/logo.svg","game/Game.js","form/Form.js","main/Main.js","nav/Nav.js","header/Header.js","app/App.js","serviceWorker.js","index.js"],"names":["module","exports","Game","props","toggleActiveClass","color","document","querySelectorAll","forEach","item","parentNode","style","backgroundColor","restart","setState","square","Array","fill","mark","win","restartBtn","winGame","squareIndex","btnRestart","className","onClick","i","wineLine","length","line","state","setTimeout","countX","countO","includes","clickSquare","event","elem","target","getAttribute","newSquare","this","map","index","key","data-square","React","Component","Form","changeInput","value","inpName","validStart","submitForm","preventDefault","onSubmit","htmlFor","onChange","type","id","placeholder","Main","infoList","Object","keys","href","Nav","changeLogo","logo","nav","exact","path","component","Header","src","alt","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d3342c53.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\nimport './Game.css'\n\nclass Game extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tsquare: Array(9).fill(null),\n\t\t\tmark: 0,\n\t\t\twin: '',\n\t\t\tcountX: 0,\n\t\t\tcountO: 0,\n\t\t\trestartBtn: ''\n\t\t};\n\n\t\tthis.wineLine = [\n\t\t\t[0, 1, 2],\n\t\t\t[3, 4, 5],\n\t\t\t[6, 7, 8],\n\t\t\t[0, 3, 6],\n\t\t\t[1, 4, 7],\n\t\t\t[2, 5, 8],\n\t\t\t[0, 4, 8],\n\t\t\t[2, 4, 6],\n\t\t]\n\t}\n\n\ttoggleActiveClass = color => {\n\t\tdocument.querySelectorAll('.square span').forEach(item => {\n\t\t\titem.parentNode.style.backgroundColor = color;\n\t\t});\n\t};\n\n\n\trestart = () => {\n\t\tthis.setState({square: Array(9).fill(null), mark: 0, win: ''});\n\t\tthis.setState({restartBtn: ''});\n\t\tthis.toggleActiveClass('#282c34')\n\n\t};\n\n\twinGame = squareIndex => {\n\t\tconst btnRestart = <div className={'reset-block'}>\n\t\t\t<button onClick={this.restart} className={\"restart-btn btn-secondary\"}>Restart</button>\n\t\t</div>;\n\n\t\tfor (let i = 0; i < this.wineLine.length; i++) {\n\t\t\tlet line = this.wineLine[i];\n\n\t\t\t// условия победы\n\t\t\tif (this.state.square[line[0]] === squareIndex\n\t\t\t\t&& this.state.square[line[1]] === squareIndex\n\t\t\t\t&& this.state.square[line[2]] === squareIndex) {\n\n\t\t\t\tthis.setState({win: `\"${squareIndex}\"  win!`});\n\t\t\t\tthis.setState({restartBtn: btnRestart});\n\n\t\t\t\t//оборачиваю выигрышную комбинацию в span, чтобы отследить ее по тегу\n\t\t\t\tthis.state.square[line[0]] = <span>{squareIndex}</span>;\n\t\t\t\tthis.state.square[line[1]] = <span>{squareIndex}</span>;\n\t\t\t\tthis.state.square[line[2]] = <span>{squareIndex}</span>;\n\n\t\t\t\t// подсвечиваю выигрышную комбинацию\n\t\t\t\tsetTimeout(() => this.toggleActiveClass('#3bc85824'), 0);\n\n\t\t\t\t// счетчик побед\n\t\t\t\tif (squareIndex === 'X') {\n\t\t\t\t\tthis.setState({countX: this.state.countX + 1});\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState({countO: this.state.countO + 1});\n\t\t\t\t}\n\t\t\t} else if (!this.state.square.includes(null)) {\n\t\t\t\tthis.setState({win: 'Draw!'});\n\t\t\t\tthis.setState({restartBtn: btnRestart});\n\t\t\t}\n\t\t}\n\t};\n\n\tclickSquare = event => {\n\t\tlet squareIndex = this.state.square,\n\t\t\telem = event.target.getAttribute('data-square');\n\n\t\tif (squareIndex[elem]) return;\n\t\tsquareIndex = this.state.mark % 2 === 0 ? 'X' : 'O';\n\t\tthis.setState({mark: this.state.mark + 1});\n\n\n\t\tconst newSquare = [...this.state.square];\n\t\tnewSquare[elem] = squareIndex;\n\t\tthis.setState({\n\t\t\t\tsquare: newSquare\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tthis.winGame(squareIndex);\n\t\t\t});\n\n\n\t};\n\n\trender() {\n\t\tconst square = this.state.square;\n\t\treturn (\n\t\t\t<div className={'game-block'}>\n\t\t\t\t<h3 className={'win'}>{this.state.win}</h3>\n\t\t\t\t<div className=\"game-area\">\n\t\t\t\t\t{square.map((elem, index) => {\n\t\t\t\t\t\treturn <div key={index} onClick={this.clickSquare} data-square={index}\n\t\t\t\t\t\t\t\t\t\tclassName=\"square\">{elem}</div>\n\t\t\t\t\t})}\n\t\t\t\t\t{this.state.restartBtn}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"who-win\">\n\t\t\t\t\t<p>X: {this.state.countX}</p>\n\t\t\t\t\t<p>O: {this.state.countO}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Game;\n","import React from 'react';\nimport './Form.css';\n\n\nclass Form extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tinpName: '',\n\t\t\tvalidStart: false\n\t\t}\n\t}\n\n\tchangeInput = event => {\n\t\tlet {value} = event.target;\n\t\tthis.setState({\n\t\t\tinpName: value,\n\t\t\tvalidStart: true\n\t\t});\n\t};\n\n\tsubmitForm = event => {\n\t\tif (!this.state.inpName) {\n\t\t\tevent.preventDefault();\n\t\t\tthis.setState({\n\t\t\t\tinpName: '',\n\t\t\t\tvalidStart: true\n\t\t\t});\n\t\t}\n\t};\n\n\trender() {\n\t\tlet inpName = '';\n\t\t!this.state.inpName && this.state.validStart ? inpName = <p>Поле не должно быть пустым</p> : inpName = '';\n\n\t\treturn (\n\t\t\t<div className={'my-form'}>\n\t\t\t\t<h3 className=\"form-title\">Form title</h3>\n\t\t\t\t<form onSubmit={this.submitForm}>\n\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t<label htmlFor=\"formGroup1\">Your name</label>\n\t\t\t\t\t\t<input onChange={this.changeInput} type=\"text\" className=\"form-control\" id=\"formGroup1\"\n\t\t\t\t\t\t\t\t placeholder=\"Name\"/>\n\t\t\t\t\t\t{inpName}\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\nexport default Form;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport './Main.css'\n\nclass Main extends React.Component {\n\n\trender() {\n\t\tconst infoList = {\n\t\t\t'Репозиторий': 'https://github.com/Artem-Pronenko/courses-react',\n\t\t\t'Документация': 'https://ru.reactjs.orghttps://wakatime.com/dashboard',\n\t\t\t'WakaTime': 'https://wakatime.com/dashboard',\n\t\t};\n\t\treturn (\n\t\t\t<main className={'container mt-2'}>\n\t\t\t\t<h3>Сделано на React</h3>\n\t\t\t\t<p>Мой первый проект на react для практики</p>\n\t\t\t\t<ul className={'info-list'}>\n\n\n\t\t\t\t\t{Object.keys(infoList).map((elem, index) => {\n\t\t\t\t\t\treturn <li key={index}><a href={infoList[elem]}>{elem}</a></li>\n\t\t\t\t\t})}\n\n\t\t\t\t</ul>\n\t\t\t</main>\n\t\t)\n\t}\n}\n\nexport default Main;\n","import React from 'react';\nimport './Nav.css';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Game from \"../game/Game\";\nimport Form from \"../form/Form\";\nimport Main from '../main/Main';\n\n//import Header from \"../header/Header\";\n\nclass Nav extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tlogo: true\n\t\t}\n\t}\n\n\tchangeLogo = () => {\n\t\tthis.setState(state => ({\n\t\t\tlogo: !state.logo\n\n\t\t}));\n\n\n\t};\n\n\trender() {\n\t\tconst nav = this.props.nav;\n\t\treturn (\n\t\t\t<Router>\n\t\t\t\t<nav className={'nav nav-block pt-2'}>\n\t\t\t\t\t<div className=\"logo-block\">\n\t\t\t\t\t\t<a className={'logo'} href={''}>{this.state.logo ? 'Learn React' : 'React learned!)'}</a>\n\t\t\t\t\t\t<button className={\"btn btn-secondary  ml-3\"} onClick={this.changeLogo}>Сhange logo</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<ul className={'nav'}>\n\t\t\t\t\t\t{Object.keys(nav).map((elem, i) => {\n\t\t\t\t\t\t\treturn <li key={i} className={'nav-item'}><a href={nav[elem]}>{elem}</a></li>\n\t\t\t\t\t\t})}\n\t\t\t\t\t</ul>\n\t\t\t\t</nav>\n\n\t\t\t\t<Switch>\n\n\t\t\t\t\t<Route exact path={\"/Main\"} component={Main}/>\n\t\t\t\t\t<Route exact path={\"/Game\"} component={Game}/>\n\t\t\t\t\t<Route exact path={\"/Form\"} component={Form}/>\n\n\n\t\t\t\t</Switch>\n\t\t\t</Router>\n\t\t);\n\t}\n}\n\n\nexport default Nav;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport logo from './logo.svg';\n\nimport './Header.css'\n\nclass Header extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<header className=\"App-header pb-3\">\n\t\t\t\t<img src={logo} className=\"App-logo\" alt=\"logo\"/>\n\t\t\t\t<h1>\n\t\t\t\t\tReact!\n\t\t\t\t</h1>\n\n\t\t\t</header>\n\t\t)\n\t}\n}\n\nexport default Header;\n","import React from 'react';\nimport './App.css';\nimport Nav from '../nav/Nav'\nimport Header from \"../header/Header\";\n\n\nclass App extends React.Component {\n\trender() {\n\t\tlet nav = this.props.nav;\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Header/>\n\t\t\t\t<Nav nav={nav}/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\n\nconst nav = {\n\t'Инфо': '/Main',\n\t'Игра': '/Game',\n\t'Форма': '/Form'\n};\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App nav={nav}/>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}